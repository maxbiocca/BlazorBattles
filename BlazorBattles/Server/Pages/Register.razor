@page "/register"
@using BlazorBattles.Client.Services
@using Microsoft.AspNetCore.Components.Forms
@inject IUnitService UnitService

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(()=> user.Username)"/>
    </div>
       <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(()=> user.Password)"/>
    </div>
       <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" typeof="password"></InputText>
        <ValidationMessage For="@(()=> user.ConfirmPassword)"/>
    </div>
       <div class="form-group">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"></InputTextArea>

    </div>
       <div class="form-group">
        <label for="startUnit">StartUnit</label>
        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach(var unit in UnitService.Unit)
            {
                <option value="@unit.Id">@unit.Title</option>
            }
        </InputSelect>

    </div>
       <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
        <ValidationMessage For="@(()=> user.Bananas)"/>
    </div>
       <div class="form-group">
        <label for="dateOfBirth">DateOfBirth</label>
        <InputDate id="dateOfBirth" @bind-Value="User.dateOfBirth" class="form-control"></InputDate>
        <ValidationMessage For="@(()=> user.DateOfBirth)"/>
    </div>
       <div class="form-check">
        <label for="confirmed" class="form-check-label">Confirmed</label>
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"></InputCheckbox>
        <ValidationMessage For="@(()=> user.IsConfirmed)"/>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    void HandleRegistration()
    {
        Console.WriteLine("store this new user in the database!");
    }

}
